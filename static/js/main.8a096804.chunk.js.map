{"version":3,"sources":["types/ProgressEnum.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","helpers.ts","App.tsx","index.tsx"],"names":["ProgressStatus","TodoList","props","todos","selectedTodo","setSelectedTodo","className","map","todo","isSelected","id","completed","cn","title","type","onClick","TodoFilter","searchQuery","setSearchQuery","progress","setProgress","value","onChange","event","target","All","Active","Completed","placeholder","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","onClose","useState","isModalLoading","setIsModalloading","currentUser","setCurrentUser","useEffect","userId","catch","finally","user","href","email","name","includesIgnoreCase","str","query","toLowerCase","includes","App","setTodos","isLoading","setIsLoading","todosToRender","preparedQuery","toLocaleLowerCase","filter","getTodosToRender","ReactDOM","render","document","getElementById"],"mappings":"2NAAYA,E,yECUCC,EAA4B,SAACC,GACxC,IAAQC,EAAyCD,EAAzCC,MAAOC,EAAkCF,EAAlCE,aAAcC,EAAoBH,EAApBG,gBAE7B,OACE,wBAAOC,UAAU,+BAAjB,UACE,gCACE,+BACE,mCACA,6BACE,sBAAMA,UAAU,OAAhB,SACE,mBAAGA,UAAU,qBAGjB,uCACA,wCAIJ,gCACGH,EAAMI,KAAI,SAACC,GACV,IAAMC,GAAyB,OAAZL,QAAY,IAAZA,OAAA,EAAAA,EAAcM,MAAOF,EAAKE,GAE7C,OACE,qBAEE,UAAQ,OACRJ,UAAU,GAHZ,UAKE,oBAAIA,UAAU,eAAd,SAA8BE,EAAKE,KACnC,oBAAIJ,UAAU,eAAd,SACGE,EAAKG,WACJ,sBACEL,UAAU,OACV,UAAQ,gBAFV,SAIE,mBAAGA,UAAU,qBAInB,oBAAIA,UAAU,2BAAd,SACE,mBACEA,UAAWM,IAAG,CACZ,mBAAoBJ,EAAKG,UACzB,mBAAoBH,EAAKG,YAH7B,SAMGH,EAAKK,UAIV,oBAAIP,UAAU,8BAAd,SACE,wBACE,kBAAgB,eAChB,UAAQ,eACRA,UAAU,SACVQ,KAAK,SACLC,QAAS,kBAAMV,EAAgBG,IALjC,SAOE,sBACEF,UAAU,OACVI,GAAG,eAFL,SAIE,mBAAGJ,UAAS,cAASG,EAAa,eAAiB,oBAtCpDD,EAAKE,c,SDlCZV,K,UAAAA,E,gBAAAA,E,uBAAAA,M,eEUCgB,EAA8B,SAACd,GAC1C,IACEe,EAIEf,EAJFe,YACAC,EAGEhB,EAHFgB,eACAC,EAEEjB,EAFFiB,SACAC,EACElB,EADFkB,YAGF,OACE,uBAAMd,UAAU,mBAAhB,UACE,mBAAGA,UAAU,UAAb,SACE,sBAAMA,UAAU,SAAhB,SACE,yBACE,UAAQ,eACRe,MAAOF,EACPG,SAAU,SAACC,GAAD,OAAWH,EACnBG,EAAMC,OAAOH,QAJjB,UAOE,wBAAQA,MAAOrB,EAAeyB,IAA9B,iBACA,wBAAQJ,MAAOrB,EAAe0B,OAA9B,oBACA,wBAAQL,MAAOrB,EAAe2B,UAA9B,8BAKN,oBAAGrB,UAAU,qDAAb,UACE,uBACEI,GAAG,cACH,UAAQ,cACRI,KAAK,OACLR,UAAU,QACVsB,YAAY,YACZP,MAAOJ,EACPK,SAAU,SAACC,GAAD,OAAWL,EAAeK,EAAMC,OAAOH,UAEnD,sBAAMf,UAAU,eAAhB,SACE,mBAAGA,UAAU,8BAGf,sBAAMA,UAAU,4BAAhB,SACGW,GAEC,wBACE,kBAAgB,eAChB,UAAQ,oBACRH,KAAK,SACLR,UAAU,SACVS,QAAS,kBAAMG,EAAe,gBCvD/BW,G,MAAmB,kBAC9B,qBAAKvB,UAAU,SAAS,UAAQ,SAAhC,SACE,qBAAKA,UAAU,wBCSnB,SAASwB,EAAOC,GAEd,IARYC,EAQNC,EAZS,iEAYYF,EAAM,QAGjC,OAXYC,EAWA,IAVL,IAAIE,SAAQ,SAAAC,GACjBC,WAAWD,EAASH,OAUnBK,MAAK,kBAAMC,MAAML,MACjBI,MAAK,SAAAE,GAAG,OAAIA,EAAIC,UAGd,ICbMC,EAA6B,SAACvC,GACzC,IAAQE,EAA0BF,EAA1BE,aAAcsC,EAAYxC,EAAZwC,QACtB,EAA4CC,oBAAS,GAArD,mBAAOC,EAAP,KAAuBC,EAAvB,KAEA,EAGIF,mBAAsB,MAH1B,mBACEG,EADF,KAEEC,EAFF,KAKAC,qBAAU,WDMW,IAACC,ECLpBJ,GAAkB,IDKEI,ECHZ7C,EAAa6C,ODGkBnB,EAAG,iBAAiBmB,KCFxDZ,KAAKU,GACLG,QACAC,SAAQ,kBAAMN,GAAkB,QAClC,CAACzC,IAEJ,IAAMI,EAAOJ,EACPgD,EAAON,EAEb,OACE,sBAAKxC,UAAU,kBAAkB,UAAQ,QAAzC,UACE,qBAAKA,UAAU,qBAEdsC,EACC,cAAC,EAAD,IAEA,sBAAKtC,UAAU,aAAf,UACE,yBAAQA,UAAU,kBAAlB,UACE,qBACEA,UAAU,0CACV,UAAQ,eAFV,gCAIYE,QAJZ,IAIYA,OAJZ,EAIYA,EAAME,MAGlB,wBACE,kBAAgB,eAChBI,KAAK,SACLR,UAAU,SACV,UAAQ,cACRS,QAAS2B,OAIb,sBAAKpC,UAAU,kBAAf,UACE,mBAAGA,UAAU,QAAQ,UAAQ,cAA7B,gBACGE,QADH,IACGA,OADH,EACGA,EAAMK,QAGT,oBAAGP,UAAU,QAAQ,UAAQ,aAA7B,UAEO,OAAJE,QAAI,IAAJA,KAAMG,UAEH,wBAAQL,UAAU,mBAAlB,kBAIA,wBAAQA,UAAU,kBAAlB,qBAEH,OAED,mBAAG+C,KAAI,wBAAYD,QAAZ,IAAYA,OAAZ,EAAYA,EAAME,OAAzB,gBACGF,QADH,IACGA,OADH,EACGA,EAAMG,oBCxEvB,SAASC,EAAmBC,EAAaC,GACvC,OAAOD,EAAIE,cAAcC,SAASF,GCW7B,IAAMG,EAAgB,WAC3B,MAA0BlB,mBAAiB,IAA3C,mBAAOxC,EAAP,KAAc2D,EAAd,KACA,EAAkCnB,oBAAS,GAA3C,mBAAOoB,EAAP,KAAkBC,EAAlB,KACA,EAAsCrB,mBAAS,IAA/C,mBAAO1B,EAAP,KAAoBC,EAApB,KACA,EAAgCyB,mBAAyB3C,EAAeyB,KAAxE,mBAAON,EAAP,KAAiBC,EAAjB,KACA,EAAwCuB,mBAAsB,MAA9D,mBAAOvC,EAAP,KAAqBC,EAArB,KAIA2C,qBAAU,WACRgB,GAAa,GHDalC,EAAY,UGInCO,KAAKyB,GACLZ,QACAC,SAAQ,kBAAMa,GAAa,QAC7B,IAEH,IAAMC,ED1BD,SACL9D,EACAc,EACAE,GAEA,IAAM+C,EAAgBjD,EAAYkD,oBAElC,OAAOhE,EAAMiE,QAAO,SAAA5D,GAClB,OAAQW,GACN,KAAKnB,EAAe2B,UAClB,OAAOnB,EAAKG,WAAa6C,EAAmBhD,EAAKK,MAAOqD,GAE1D,KAAKlE,EAAe0B,OAClB,OAAQlB,EAAKG,WAAa6C,EAAmBhD,EAAKK,MAAOqD,GAE3D,QACE,OAAOV,EAAmBhD,EAAKK,MAAOqD,OCUtBG,CAAiBlE,EAAOc,EAAaE,GAE3D,OACE,qCACE,qBAAKb,UAAU,UAAf,SACE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,MAAf,UACE,oBAAIA,UAAU,QAAd,oBAEA,qBAAKA,UAAU,QAAf,SACE,cAAC,EAAD,CACEW,YAAaA,EACbC,eAAgBA,EAChBC,SAAUA,EACVC,YAAaA,MAIjB,sBAAKd,UAAU,QAAf,UACGyD,GAAa,cAAC,EAAD,IACd,cAAC,EAAD,CACE5D,MAAO8D,EACP7D,aAAcA,EACdC,gBAAiBA,cAO1BD,GAEC,cAAC,EAAD,CACEA,aAAcA,EACdsC,QA7CW,kBAAMrC,EAAgB,aCnB3CiE,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.8a096804.chunk.js","sourcesContent":["export enum ProgressStatus {\n  All = 'all',\n  Active = 'active',\n  Completed = 'completed',\n}\n","import cn from 'classnames';\nimport React from 'react';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todos: Todo[];\n  selectedTodo: Todo | null;\n  setSelectedTodo: (todo: Todo) => void;\n}\n\nexport const TodoList: React.FC<Props> = (props) => {\n  const { todos, selectedTodo, setSelectedTodo } = props;\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map((todo) => {\n          const isSelected = selectedTodo?.id === todo.id;\n\n          return (\n            <tr\n              key={todo.id}\n              data-cy=\"todo\"\n              className=\"\"\n            >\n              <td className=\"is-vcentered\">{todo.id}</td>\n              <td className=\"is-vcentered\">\n                {todo.completed && (\n                  <span\n                    className=\"icon\"\n                    data-cy=\"iconCompleted\"\n                  >\n                    <i className=\"fas fa-check\" />\n                  </span>\n                )}\n              </td>\n              <td className=\"is-vcentered is-expanded\">\n                <p\n                  className={cn({\n                    'has-text-danger': !todo.completed,\n                    'has-text-success': todo.completed,\n                  })}\n                >\n                  {todo.title}\n                </p>\n              </td>\n\n              <td className=\"has-text-right is-vcentered\">\n                <button\n                  aria-labelledby=\"button-label\"\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => setSelectedTodo(todo)}\n                >\n                  <span\n                    className=\"icon\"\n                    id=\"button-label\"\n                  >\n                    <i className={`far ${isSelected ? 'fa-eye-slash' : 'fa-eye'}`} />\n                  </span>\n                </button>\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import { ProgressStatus } from '../../types/ProgressEnum';\nimport './TodoFilter.scss';\n\ninterface Props {\n  searchQuery: string,\n  setSearchQuery: (searchValue: string) => void,\n  progress: ProgressStatus,\n  setProgress: (value: ProgressStatus) => void;\n}\n\nexport const TodoFilter: React.FC<Props> = (props) => {\n  const {\n    searchQuery,\n    setSearchQuery,\n    progress,\n    setProgress,\n  } = props;\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={progress}\n            onChange={(event) => setProgress(\n              event.target.value as ProgressStatus,\n            )}\n          >\n            <option value={ProgressStatus.All}>All</option>\n            <option value={ProgressStatus.Active}>Active</option>\n            <option value={ProgressStatus.Completed}>Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          id=\"searchInput\"\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={searchQuery}\n          onChange={(event) => setSearchQuery(event.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right pointer-all\">\n          {searchQuery\n          && (\n            <button\n              aria-labelledby=\"button-label\"\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => setSearchQuery('')}\n            />\n          )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\n\ninterface Props {\n  selectedTodo: Todo,\n  onClose: () => void,\n}\n\nexport const TodoModal: React.FC<Props> = (props) => {\n  const { selectedTodo, onClose } = props;\n  const [isModalLoading, setIsModalloading] = useState(false);\n\n  const [\n    currentUser,\n    setCurrentUser,\n  ] = useState<User | null>(null);\n\n  useEffect(() => {\n    setIsModalloading(true);\n\n    getUser(selectedTodo.userId)\n      .then(setCurrentUser)\n      .catch()\n      .finally(() => setIsModalloading(false));\n  }, [selectedTodo]);\n\n  const todo = selectedTodo;\n  const user = currentUser;\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isModalLoading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo?.id}`}\n            </div>\n\n            <button\n              aria-labelledby=\"button-label\"\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={onClose}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n\n              {todo?.completed\n                ? (\n                  <strong className=\"has-text-success\">Done</strong>\n                )\n\n                : (\n                  <strong className=\"has-text-danger\">Planned</strong>\n                )}\n              {' by '}\n\n              <a href={`mailto:${user?.email}`}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import { ProgressStatus } from './types/ProgressEnum';\nimport { Todo } from './types/Todo';\n\nfunction includesIgnoreCase(str: string, query: string) {\n  return str.toLowerCase().includes(query);\n}\n\nexport function getTodosToRender(\n  todos: Todo[],\n  searchQuery: string,\n  progress: ProgressStatus,\n): Todo[] {\n  const preparedQuery = searchQuery.toLocaleLowerCase();\n\n  return todos.filter(todo => {\n    switch (progress) {\n      case ProgressStatus.Completed:\n        return todo.completed && includesIgnoreCase(todo.title, preparedQuery);\n\n      case ProgressStatus.Active:\n        return !todo.completed && includesIgnoreCase(todo.title, preparedQuery);\n\n      default:\n        return includesIgnoreCase(todo.title, preparedQuery);\n    }\n  });\n}\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport './App.scss';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodosToRender } from './helpers';\nimport { ProgressStatus } from './types/ProgressEnum';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [progress, setProgress] = useState<ProgressStatus>(ProgressStatus.All);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n\n  const closeModal = () => setSelectedTodo(null);\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    getTodos()\n      .then(setTodos)\n      .catch()\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  const todosToRender = getTodosToRender(todos, searchQuery, progress);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                searchQuery={searchQuery}\n                setSearchQuery={setSearchQuery}\n                progress={progress}\n                setProgress={setProgress}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isLoading && <Loader />}\n              <TodoList\n                todos={todosToRender}\n                selectedTodo={selectedTodo}\n                setSelectedTodo={setSelectedTodo}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo\n      && (\n        <TodoModal\n          selectedTodo={selectedTodo}\n          onClose={closeModal}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}